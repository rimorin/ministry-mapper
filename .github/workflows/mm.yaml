name: Ministry Mapper
env:
  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
  REACT_APP_FIREBASE_DB_URL: ${{ secrets.REACT_APP_FIREBASE_DB_URL }}
  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
  REACT_APP_FIREBASE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_BUCKET }}
  REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID }}
  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_API_TOKEN}}
on:
  pull_request:
    branches:
      - staging
      - master
  push:
    branches:
      - staging
      - master

jobs:
  verify:
    if: github.event_name  == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Notify pull request
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_API_CHANNEL}}
          payload: |
            {
              "text": "PR verification started (In Progress)",
              "attachments": [
                {
                  "pretext": "Verification started",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    }
                  ]
                }
              ]
            }
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install dependencies
        run: npm ci
      - name: Check code formatting
        run: npm run prettier
      - name: Run application test cases
        run: npm run test
      - name: Run application build
        run: npm run build
      - name: Notify passed verification
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_API_CHANNEL}}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "Verification finished (Passed)",
              "attachments": [
                {
                  "pretext": "Verification finished",
                  "color": "good",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
      - name: Notify failed verification
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_API_CHANNEL}}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "Verification finished (Failed)",
              "attachments": [
                {
                  "pretext": "Verification finished",
                  "color": "danger",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
  deploy:
    if: github.event_name  == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on staging
        if: github.ref == 'refs/heads/staging'
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.STAGING_DEPLOY_HOOK }}
          method: "POST"
      - name: Deploy on production
        if: github.ref == 'refs/heads/master'
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.PRODUCTION_DEPLOY_HOOK }}
          method: "POST"
